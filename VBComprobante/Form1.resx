<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>